/* concentratore.h
   Generated by wsdl2h 1.2.9k from http://130.251.5.85/WSTELECONTROLLO/Concentratore43.asmx?WSDL and typemap.dat
   2008-05-04 18:14:13 GMT
   Copyright (C) 2001-2006 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * http://130.251.5.85/WSTELECONTROLLO                                        *
 *                                                                            *
\******************************************************************************/

/* WSDL Documentation:

Questo webservice  utilizzato per l'upload dei dati dal concentratore verso il server centrale. La risposta  costituita da un documento XML contenente l'esito della comunicazione ed eventuali istruzioni per il concentratore
*/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to disable)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://130.251.5.85/WSTELECONTROLLO"

*/

//gsoap ns1   schema namespace:	http://130.251.5.85/WSTELECONTROLLO
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in element "xs:schema".
typedef _XML _xsd__schema;


//  Forward declaration of class ns1__SyncResponse.
class ns1__SyncResponse;

//  Forward declaration of class _ns1__uploadData.
class _ns1__uploadData;

//  Forward declaration of class _ns1__uploadDataResponse.
class _ns1__uploadDataResponse;

//  Forward declaration of class _ns1__GetChanges.
class _ns1__GetChanges;

//  Forward declaration of class _ns1__GetChangesResponse.
class _ns1__GetChangesResponse;

//  Forward declaration of class _ns1__ConfirmChanges.
class _ns1__ConfirmChanges;

//  Forward declaration of class _ns1__ConfirmChangesResponse.
class _ns1__ConfirmChangesResponse;

//  Forward declaration of class _ns1__ResetViaggio.
class _ns1__ResetViaggio;

//  Forward declaration of class _ns1__ResetViaggioResponse.
class _ns1__ResetViaggioResponse;

//  Forward declaration of class _ns1__ResetViaggi.
class _ns1__ResetViaggi;

//  Forward declaration of class _ns1__ResetViaggiResponse.
class _ns1__ResetViaggiResponse;

//  Forward declaration of class _ns1__WriteDelivery.
class _ns1__WriteDelivery;

//  Forward declaration of class _ns1__WriteDeliveryResponse.
class _ns1__WriteDeliveryResponse;

/// "http://130.251.5.85/WSTELECONTROLLO":SyncResponse is a complexType.
class ns1__SyncResponse
{ public:
/// Element isDataPresent of type xs:boolean.
    bool                                 isDataPresent                  1;	///< Required element.
/// Element rowCountDataScarico of type xs:int.
    int                                  rowCountDataScarico            1;	///< Required element.
/// Element message of type xs:string.
    std::string*                         message                        0;	///< Optional element.
    class _ns1__SyncResponse_dataset
    {
/// Imported element reference xs:schema.
    _xsd__schema                         xsd__schema                    1;	///< Required element.
/// TODO: <any>
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    }                                   *dataset                        0;	///< Optional element.
/// Element status of type xs:string.
    std::string*                         status                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":uploadData of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":uploadData is a complexType.
class _ns1__uploadData
{ public:
/// Element dati of type xs:string.
    std::string*                         dati                           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":uploadDataResponse of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":uploadDataResponse is a complexType.
class _ns1__uploadDataResponse
{ public:
/// TODO: <any minOccurs="0" maxOccurs="1">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         ;	///< Catch any element content in XML string.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":GetChanges of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":GetChanges is a complexType.
class _ns1__GetChanges
{ public:
/// Element imei of type xs:string.
    std::string*                         imei                           0;	///< Optional element.
/// Element dataScarico of type xs:dateTime.
    time_t                               dataScarico                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":GetChangesResponse of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":GetChangesResponse is a complexType.
class _ns1__GetChangesResponse
{ public:
/// Element GetChangesResult of type "http://130.251.5.85/WSTELECONTROLLO":SyncResponse.
    ns1__SyncResponse*                   GetChangesResult               0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":ConfirmChanges of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":ConfirmChanges is a complexType.
class _ns1__ConfirmChanges
{ public:
/// Element imei of type xs:string.
    std::string*                         imei                           0;	///< Optional element.
/// Element dataScarico of type xs:dateTime.
    time_t                               dataScarico                    1;	///< Required element.
/// Element CIV of type xs:long.
    LONG64                               CIV                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":ConfirmChangesResponse of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":ConfirmChangesResponse is a complexType.
class _ns1__ConfirmChangesResponse
{ public:
/// Element ConfirmChangesResult of type xs:string.
    std::string*                         ConfirmChangesResult           0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":ResetViaggio of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":ResetViaggio is a complexType.
class _ns1__ResetViaggio
{ public:
/// Element imei of type xs:string.
    std::string*                         imei                           0;	///< Optional element.
/// Element dataScarico of type xs:dateTime.
    time_t                               dataScarico                    1;	///< Required element.
/// Element CIV of type xs:long.
    LONG64                               CIV                            1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":ResetViaggioResponse of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":ResetViaggioResponse is a complexType.
class _ns1__ResetViaggioResponse
{ public:
/// Element ResetViaggioResult of type xs:string.
    std::string*                         ResetViaggioResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":ResetViaggi of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":ResetViaggi is a complexType.
class _ns1__ResetViaggi
{ public:
/// Element imei of type xs:string.
    std::string*                         imei                           0;	///< Optional element.
/// Element dataScarico of type xs:dateTime.
    time_t                               dataScarico                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":ResetViaggiResponse of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":ResetViaggiResponse is a complexType.
class _ns1__ResetViaggiResponse
{ public:
/// Element ResetViaggiResult of type xs:string.
    std::string*                         ResetViaggiResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":WriteDelivery of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":WriteDelivery is a complexType.
class _ns1__WriteDelivery
{ public:
/// Element imei of type xs:string.
    std::string*                         imei                           0;	///< Optional element.
/// Element ProdRow of type xs:string.
    std::string*                         ProdRow                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Element "http://130.251.5.85/WSTELECONTROLLO":WriteDeliveryResponse of complexType.

/// "http://130.251.5.85/WSTELECONTROLLO":WriteDeliveryResponse is a complexType.
class _ns1__WriteDeliveryResponse
{ public:
/// Element WriteDeliveryResult of type xs:string.
    std::string*                         WriteDeliveryResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns2  service name:	Concentratore43Soap 
//gsoap ns2  service type:	Concentratore43Soap 
//gsoap ns2  service port:	http://130.251.5.85/WSTELECONTROLLO/Concentratore43.asmx 
//gsoap ns2  service namespace:	http://130.251.5.85/WSTELECONTROLLO/Concentratore43Soap 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns3  service name:	Concentratore43Soap12 
//gsoap ns3  service type:	Concentratore43Soap 
//gsoap ns3  service port:	http://130.251.5.85/WSTELECONTROLLO/Concentratore43.asmx 
//gsoap ns3  service namespace:	http://130.251.5.85/WSTELECONTROLLO/Concentratore43Soap12 
//gsoap ns3  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_documentation Documentation
Questo webservice  utilizzato per l'upload dei dati dal concentratore verso il server centrale. La risposta  costituita da un documento XML contenente l'esito della comunicazione ed eventuali istruzioni per il concentratore

@section Service_bindings Bindings
  - @ref Concentratore43Soap
  - @ref Concentratore43Soap12

*/

/**

@page Concentratore43Soap Binding "Concentratore43Soap"

@section Concentratore43_service Service Documentation "Concentratore43"
Questo webservice  utilizzato per l'upload dei dati dal concentratore verso il server centrale. La risposta  costituita da un documento XML contenente l'esito della comunicazione ed eventuali istruzioni per il concentratore

@section Concentratore43Soap_operations Operations of Binding  "Concentratore43Soap"
  - @ref __ns2__uploadData
  - @ref __ns2__GetChanges
  - @ref __ns2__ConfirmChanges
  - @ref __ns2__ResetViaggio
  - @ref __ns2__ResetViaggi
  - @ref __ns2__WriteDelivery

@section Concentratore43Soap_ports Endpoints of Binding  "Concentratore43Soap"
  - http://130.251.5.85/WSTELECONTROLLO/Concentratore43.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page Concentratore43Soap12 Binding "Concentratore43Soap12"

@section Concentratore43_service Service Documentation "Concentratore43"
Questo webservice  utilizzato per l'upload dei dati dal concentratore verso il server centrale. La risposta  costituita da un documento XML contenente l'esito della comunicazione ed eventuali istruzioni per il concentratore

@section Concentratore43Soap12_operations Operations of Binding  "Concentratore43Soap12"
  - @ref __ns3__uploadData
  - @ref __ns3__GetChanges
  - @ref __ns3__ConfirmChanges
  - @ref __ns3__ResetViaggio
  - @ref __ns3__ResetViaggi
  - @ref __ns3__WriteDelivery

@section Concentratore43Soap12_ports Endpoints of Binding  "Concentratore43Soap12"
  - http://130.251.5.85/WSTELECONTROLLO/Concentratore43.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Concentratore43Soap                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns2__uploadData                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__uploadData" of service binding "Concentratore43Soap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/uploadData"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__uploadData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__uploadData*                   ns1__uploadData,
    // response parameters:
    _ns1__uploadDataResponse*           ns1__uploadDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__uploadData(
    struct soap *soap,
    // request parameters:
    _ns1__uploadData*                   ns1__uploadData,
    // response parameters:
    _ns1__uploadDataResponse*           ns1__uploadDataResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43SoapProxy.h):
  class Concentratore43Soap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	uploadData document
//gsoap ns2  service method-encoding:	uploadData literal
//gsoap ns2  service method-action:	uploadData http://130.251.5.85/WSTELECONTROLLO/uploadData
int __ns2__uploadData(
    _ns1__uploadData*                   ns1__uploadData,	///< Request parameter
    _ns1__uploadDataResponse*           ns1__uploadDataResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__GetChanges                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__GetChanges" of service binding "Concentratore43Soap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/GetChanges"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__GetChanges(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetChanges*                   ns1__GetChanges,
    // response parameters:
    _ns1__GetChangesResponse*           ns1__GetChangesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__GetChanges(
    struct soap *soap,
    // request parameters:
    _ns1__GetChanges*                   ns1__GetChanges,
    // response parameters:
    _ns1__GetChangesResponse*           ns1__GetChangesResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43SoapProxy.h):
  class Concentratore43Soap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	GetChanges document
//gsoap ns2  service method-encoding:	GetChanges literal
//gsoap ns2  service method-action:	GetChanges http://130.251.5.85/WSTELECONTROLLO/GetChanges
int __ns2__GetChanges(
    _ns1__GetChanges*                   ns1__GetChanges,	///< Request parameter
    _ns1__GetChangesResponse*           ns1__GetChangesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__ConfirmChanges                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ConfirmChanges" of service binding "Concentratore43Soap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/ConfirmChanges"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ConfirmChanges(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ConfirmChanges*               ns1__ConfirmChanges,
    // response parameters:
    _ns1__ConfirmChangesResponse*       ns1__ConfirmChangesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ConfirmChanges(
    struct soap *soap,
    // request parameters:
    _ns1__ConfirmChanges*               ns1__ConfirmChanges,
    // response parameters:
    _ns1__ConfirmChangesResponse*       ns1__ConfirmChangesResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43SoapProxy.h):
  class Concentratore43Soap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	ConfirmChanges document
//gsoap ns2  service method-encoding:	ConfirmChanges literal
//gsoap ns2  service method-action:	ConfirmChanges http://130.251.5.85/WSTELECONTROLLO/ConfirmChanges
int __ns2__ConfirmChanges(
    _ns1__ConfirmChanges*               ns1__ConfirmChanges,	///< Request parameter
    _ns1__ConfirmChangesResponse*       ns1__ConfirmChangesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__ResetViaggio                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ResetViaggio" of service binding "Concentratore43Soap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/ResetViaggio"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ResetViaggio(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ResetViaggio*                 ns1__ResetViaggio,
    // response parameters:
    _ns1__ResetViaggioResponse*         ns1__ResetViaggioResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ResetViaggio(
    struct soap *soap,
    // request parameters:
    _ns1__ResetViaggio*                 ns1__ResetViaggio,
    // response parameters:
    _ns1__ResetViaggioResponse*         ns1__ResetViaggioResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43SoapProxy.h):
  class Concentratore43Soap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	ResetViaggio document
//gsoap ns2  service method-encoding:	ResetViaggio literal
//gsoap ns2  service method-action:	ResetViaggio http://130.251.5.85/WSTELECONTROLLO/ResetViaggio
int __ns2__ResetViaggio(
    _ns1__ResetViaggio*                 ns1__ResetViaggio,	///< Request parameter
    _ns1__ResetViaggioResponse*         ns1__ResetViaggioResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__ResetViaggi                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__ResetViaggi" of service binding "Concentratore43Soap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/ResetViaggi"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__ResetViaggi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ResetViaggi*                  ns1__ResetViaggi,
    // response parameters:
    _ns1__ResetViaggiResponse*          ns1__ResetViaggiResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__ResetViaggi(
    struct soap *soap,
    // request parameters:
    _ns1__ResetViaggi*                  ns1__ResetViaggi,
    // response parameters:
    _ns1__ResetViaggiResponse*          ns1__ResetViaggiResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43SoapProxy.h):
  class Concentratore43Soap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	ResetViaggi document
//gsoap ns2  service method-encoding:	ResetViaggi literal
//gsoap ns2  service method-action:	ResetViaggi http://130.251.5.85/WSTELECONTROLLO/ResetViaggi
int __ns2__ResetViaggi(
    _ns1__ResetViaggi*                  ns1__ResetViaggi,	///< Request parameter
    _ns1__ResetViaggiResponse*          ns1__ResetViaggiResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns2__WriteDelivery                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__WriteDelivery" of service binding "Concentratore43Soap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/WriteDelivery"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__WriteDelivery(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__WriteDelivery*                ns1__WriteDelivery,
    // response parameters:
    _ns1__WriteDeliveryResponse*        ns1__WriteDeliveryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__WriteDelivery(
    struct soap *soap,
    // request parameters:
    _ns1__WriteDelivery*                ns1__WriteDelivery,
    // response parameters:
    _ns1__WriteDeliveryResponse*        ns1__WriteDeliveryResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43SoapProxy.h):
  class Concentratore43Soap;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns2  service method-style:	WriteDelivery document
//gsoap ns2  service method-encoding:	WriteDelivery literal
//gsoap ns2  service method-action:	WriteDelivery http://130.251.5.85/WSTELECONTROLLO/WriteDelivery
int __ns2__WriteDelivery(
    _ns1__WriteDelivery*                ns1__WriteDelivery,	///< Request parameter
    _ns1__WriteDeliveryResponse*        ns1__WriteDeliveryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Concentratore43Soap12                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns3__uploadData                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__uploadData" of service binding "Concentratore43Soap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/uploadData"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__uploadData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__uploadData*                   ns1__uploadData,
    // response parameters:
    _ns1__uploadDataResponse*           ns1__uploadDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__uploadData(
    struct soap *soap,
    // request parameters:
    _ns1__uploadData*                   ns1__uploadData,
    // response parameters:
    _ns1__uploadDataResponse*           ns1__uploadDataResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43Soap12Proxy.h):
  class Concentratore43Soap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	uploadData document
//gsoap ns3  service method-encoding:	uploadData literal
//gsoap ns3  service method-action:	uploadData http://130.251.5.85/WSTELECONTROLLO/uploadData
int __ns3__uploadData(
    _ns1__uploadData*                   ns1__uploadData,	///< Request parameter
    _ns1__uploadDataResponse*           ns1__uploadDataResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__GetChanges                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__GetChanges" of service binding "Concentratore43Soap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/GetChanges"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__GetChanges(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__GetChanges*                   ns1__GetChanges,
    // response parameters:
    _ns1__GetChangesResponse*           ns1__GetChangesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__GetChanges(
    struct soap *soap,
    // request parameters:
    _ns1__GetChanges*                   ns1__GetChanges,
    // response parameters:
    _ns1__GetChangesResponse*           ns1__GetChangesResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43Soap12Proxy.h):
  class Concentratore43Soap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	GetChanges document
//gsoap ns3  service method-encoding:	GetChanges literal
//gsoap ns3  service method-action:	GetChanges http://130.251.5.85/WSTELECONTROLLO/GetChanges
int __ns3__GetChanges(
    _ns1__GetChanges*                   ns1__GetChanges,	///< Request parameter
    _ns1__GetChangesResponse*           ns1__GetChangesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__ConfirmChanges                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__ConfirmChanges" of service binding "Concentratore43Soap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/ConfirmChanges"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__ConfirmChanges(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ConfirmChanges*               ns1__ConfirmChanges,
    // response parameters:
    _ns1__ConfirmChangesResponse*       ns1__ConfirmChangesResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__ConfirmChanges(
    struct soap *soap,
    // request parameters:
    _ns1__ConfirmChanges*               ns1__ConfirmChanges,
    // response parameters:
    _ns1__ConfirmChangesResponse*       ns1__ConfirmChangesResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43Soap12Proxy.h):
  class Concentratore43Soap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	ConfirmChanges document
//gsoap ns3  service method-encoding:	ConfirmChanges literal
//gsoap ns3  service method-action:	ConfirmChanges http://130.251.5.85/WSTELECONTROLLO/ConfirmChanges
int __ns3__ConfirmChanges(
    _ns1__ConfirmChanges*               ns1__ConfirmChanges,	///< Request parameter
    _ns1__ConfirmChangesResponse*       ns1__ConfirmChangesResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__ResetViaggio                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__ResetViaggio" of service binding "Concentratore43Soap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/ResetViaggio"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__ResetViaggio(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ResetViaggio*                 ns1__ResetViaggio,
    // response parameters:
    _ns1__ResetViaggioResponse*         ns1__ResetViaggioResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__ResetViaggio(
    struct soap *soap,
    // request parameters:
    _ns1__ResetViaggio*                 ns1__ResetViaggio,
    // response parameters:
    _ns1__ResetViaggioResponse*         ns1__ResetViaggioResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43Soap12Proxy.h):
  class Concentratore43Soap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	ResetViaggio document
//gsoap ns3  service method-encoding:	ResetViaggio literal
//gsoap ns3  service method-action:	ResetViaggio http://130.251.5.85/WSTELECONTROLLO/ResetViaggio
int __ns3__ResetViaggio(
    _ns1__ResetViaggio*                 ns1__ResetViaggio,	///< Request parameter
    _ns1__ResetViaggioResponse*         ns1__ResetViaggioResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__ResetViaggi                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__ResetViaggi" of service binding "Concentratore43Soap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/ResetViaggi"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__ResetViaggi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__ResetViaggi*                  ns1__ResetViaggi,
    // response parameters:
    _ns1__ResetViaggiResponse*          ns1__ResetViaggiResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__ResetViaggi(
    struct soap *soap,
    // request parameters:
    _ns1__ResetViaggi*                  ns1__ResetViaggi,
    // response parameters:
    _ns1__ResetViaggiResponse*          ns1__ResetViaggiResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43Soap12Proxy.h):
  class Concentratore43Soap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	ResetViaggi document
//gsoap ns3  service method-encoding:	ResetViaggi literal
//gsoap ns3  service method-action:	ResetViaggi http://130.251.5.85/WSTELECONTROLLO/ResetViaggi
int __ns3__ResetViaggi(
    _ns1__ResetViaggi*                  ns1__ResetViaggi,	///< Request parameter
    _ns1__ResetViaggiResponse*          ns1__ResetViaggiResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns3__WriteDelivery                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns3__WriteDelivery" of service binding "Concentratore43Soap12"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://130.251.5.85/WSTELECONTROLLO/WriteDelivery"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns3__WriteDelivery(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    _ns1__WriteDelivery*                ns1__WriteDelivery,
    // response parameters:
    _ns1__WriteDeliveryResponse*        ns1__WriteDeliveryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns3__WriteDelivery(
    struct soap *soap,
    // request parameters:
    _ns1__WriteDelivery*                ns1__WriteDelivery,
    // response parameters:
    _ns1__WriteDeliveryResponse*        ns1__WriteDeliveryResponse
  );
@endcode

C++ proxy class (defined in soapConcentratore43Soap12Proxy.h):
  class Concentratore43Soap12;

Note: use soapcpp2 option '-i' to generate improved proxy and service classes;

*/

//gsoap ns3  service method-style:	WriteDelivery document
//gsoap ns3  service method-encoding:	WriteDelivery literal
//gsoap ns3  service method-action:	WriteDelivery http://130.251.5.85/WSTELECONTROLLO/WriteDelivery
int __ns3__WriteDelivery(
    _ns1__WriteDelivery*                ns1__WriteDelivery,	///< Request parameter
    _ns1__WriteDeliveryResponse*        ns1__WriteDeliveryResponse	///< Response parameter
);

/* End of concentratore.h */
